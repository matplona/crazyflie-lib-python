# -*- coding: utf-8 -*-
#
#     ||          ____  _ __
#  +------+      / __ )(_) /_______________ _____  ___
#  | 0xBC |     / __  / / __/ ___/ ___/ __ `/_  / / _ \
#  +------+    / /_/ / / /_/ /__/ /  / /_/ / / /_/  __/
#   ||  ||    /_____/_/\__/\___/_/   \__,_/ /___/\___/
#
#  Copyright (C) 2018 Bitcraze AB
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA  02110-1301, USA.
"""
Simple example that connects to one crazyflie (check the address at the top
and update it to your crazyflie address) and uses the high level commander
to send setpoints and trajectory to fly a figure 8.

This example is intended to work with any positioning system (including LPS).
It aims at documenting how to set the Crazyflie in position control mode
and how to send setpoints using the high level commander.
"""
import sys
import time

import cflib.crtp
from cflib.crazyflie import Crazyflie
from cflib.crazyflie.log import LogConfig
from cflib.crazyflie.mem import MemoryElement
from cflib.crazyflie.mem import Poly4D
from cflib.crazyflie.syncCrazyflie import SyncCrazyflie
from cflib.crazyflie.syncLogger import SyncLogger
from cflib.utils import uri_helper

# URI to the Crazyflie to connect to
uri = uri_helper.uri_from_env(default='radio://0/80/2M/E7E7E7E700')

# The trajectory to fly
# See https://github.com/whoenig/uav_trajectories for a tool to generate
# trajectories

# Duration,x^0,x^1,x^2,x^3,x^4,x^5,x^6,x^7,y^0,y^1,y^2,y^3,y^4,y^5,y^6,y^7,z^0,z^1,z^2,z^3,z^4,z^5,z^6,z^7,yaw^0,yaw^1,yaw^2,yaw^3,yaw^4,yaw^5,yaw^6,yaw^7
figure8 = [
    [1.050000, 0.000000, -0.000000, 0.000000, -0.000000, 0.830443, -0.276140, -0.384219, 0.180493, -0.000000, 0.000000, -0.000000, 0.000000, -1.356107, 0.688430, 0.587426, -0.329106, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.710000, 0.396058, 0.918033, 0.128965, -0.773546, 0.339704, 0.034310, -0.026417, -0.030049, -0.445604, -0.684403, 0.888433, 1.493630, -1.361618, -0.139316, 0.158875, 0.095799, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.620000, 0.922409, 0.405715, -0.582968, -0.092188, -0.114670, 0.101046, 0.075834, -0.037926, -0.291165, 0.967514, 0.421451, -1.086348, 0.545211, 0.030109, -0.050046, -0.068177, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.700000, 0.923174, -0.431533, -0.682975, 0.177173, 0.319468, -0.043852, -0.111269, 0.023166, 0.289869, 0.724722, -0.512011, -0.209623, -0.218710, 0.108797, 0.128756, -0.055461, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.560000, 0.405364, -0.834716, 0.158939, 0.288175, -0.373738, -0.054995, 0.036090, 0.078627, 0.450742, -0.385534, -0.954089, 0.128288, 0.442620, 0.055630, -0.060142, -0.076163, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.560000, 0.001062, -0.646270, -0.012560, -0.324065, 0.125327, 0.119738, 0.034567, -0.063130, 0.001593, -1.031457, 0.015159, 0.820816, -0.152665, -0.130729, -0.045679, 0.080444, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.700000, -0.402804, -0.820508, -0.132914, 0.236278, 0.235164, -0.053551, -0.088687, 0.031253, -0.449354, -0.411507, 0.902946, 0.185335, -0.239125, -0.041696, 0.016857, 0.016709, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.620000, -0.921641, -0.464596, 0.661875, 0.286582, -0.228921, -0.051987, 0.004669, 0.038463, -0.292459, 0.777682, 0.565788, -0.432472, -0.060568, -0.082048, -0.009439, 0.041158, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.710000, -0.923935, 0.447832, 0.627381, -0.259808, -0.042325, -0.032258, 0.001420, 0.005294, 0.288570, 0.873350, -0.515586, -0.730207, -0.026023, 0.288755, 0.215678, -0.148061, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [1.053185, -0.398611, 0.850510, -0.144007, -0.485368, -0.079781, 0.176330, 0.234482, -0.153567, 0.447039, -0.532729, -0.855023, 0.878509, 0.775168, -0.391051, -0.713519, 0.391628, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [1.050000, 0.000000, -0.000000, 0.000000, -0.000000, 0.830443, -0.276140, -0.384219, 0.180493, -0.000000, 0.000000, -0.000000, 0.000000, -1.356107, 0.688430, 0.587426, -0.329106, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.710000, 0.396058, 0.918033, 0.128965, -0.773546, 0.339704, 0.034310, -0.026417, -0.030049, -0.445604, -0.684403, 0.888433, 1.493630, -1.361618, -0.139316, 0.158875, 0.095799, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.620000, 0.922409, 0.405715, -0.582968, -0.092188, -0.114670, 0.101046, 0.075834, -0.037926, -0.291165, 0.967514, 0.421451, -1.086348, 0.545211, 0.030109, -0.050046, -0.068177, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.700000, 0.923174, -0.431533, -0.682975, 0.177173, 0.319468, -0.043852, -0.111269, 0.023166, 0.289869, 0.724722, -0.512011, -0.209623, -0.218710, 0.108797, 0.128756, -0.055461, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.560000, 0.405364, -0.834716, 0.158939, 0.288175, -0.373738, -0.054995, 0.036090, 0.078627, 0.450742, -0.385534, -0.954089, 0.128288, 0.442620, 0.055630, -0.060142, -0.076163, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.560000, 0.001062, -0.646270, -0.012560, -0.324065, 0.125327, 0.119738, 0.034567, -0.063130, 0.001593, -1.031457, 0.015159, 0.820816, -0.152665, -0.130729, -0.045679, 0.080444, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.700000, -0.402804, -0.820508, -0.132914, 0.236278, 0.235164, -0.053551, -0.088687, 0.031253, -0.449354, -0.411507, 0.902946, 0.185335, -0.239125, -0.041696, 0.016857, 0.016709, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.620000, -0.921641, -0.464596, 0.661875, 0.286582, -0.228921, -0.051987, 0.004669, 0.038463, -0.292459, 0.777682, 0.565788, -0.432472, -0.060568, -0.082048, -0.009439, 0.041158, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.710000, -0.923935, 0.447832, 0.627381, -0.259808, -0.042325, -0.032258, 0.001420, 0.005294, 0.288570, 0.873350, -0.515586, -0.730207, -0.026023, 0.288755, 0.215678, -0.148061, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [1.053185, -0.398611, 0.850510, -0.144007, -0.485368, -0.079781, 0.176330, 0.234482, -0.153567, 0.447039, -0.532729, -0.855023, 0.878509, 0.775168, -0.391051, -0.713519, 0.391628, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [1.050000, 0.000000, -0.000000, 0.000000, -0.000000, 0.830443, -0.276140, -0.384219, 0.180493, -0.000000, 0.000000, -0.000000, 0.000000, -1.356107, 0.688430, 0.587426, -0.329106, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.710000, 0.396058, 0.918033, 0.128965, -0.773546, 0.339704, 0.034310, -0.026417, -0.030049, -0.445604, -0.684403, 0.888433, 1.493630, -1.361618, -0.139316, 0.158875, 0.095799, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.620000, 0.922409, 0.405715, -0.582968, -0.092188, -0.114670, 0.101046, 0.075834, -0.037926, -0.291165, 0.967514, 0.421451, -1.086348, 0.545211, 0.030109, -0.050046, -0.068177, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.700000, 0.923174, -0.431533, -0.682975, 0.177173, 0.319468, -0.043852, -0.111269, 0.023166, 0.289869, 0.724722, -0.512011, -0.209623, -0.218710, 0.108797, 0.128756, -0.055461, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.560000, 0.405364, -0.834716, 0.158939, 0.288175, -0.373738, -0.054995, 0.036090, 0.078627, 0.450742, -0.385534, -0.954089, 0.128288, 0.442620, 0.055630, -0.060142, -0.076163, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.560000, 0.001062, -0.646270, -0.012560, -0.324065, 0.125327, 0.119738, 0.034567, -0.063130, 0.001593, -1.031457, 0.015159, 0.820816, -0.152665, -0.130729, -0.045679, 0.080444, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.700000, -0.402804, -0.820508, -0.132914, 0.236278, 0.235164, -0.053551, -0.088687, 0.031253, -0.449354, -0.411507, 0.902946, 0.185335, -0.239125, -0.041696, 0.016857, 0.016709, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.620000, -0.921641, -0.464596, 0.661875, 0.286582, -0.228921, -0.051987, 0.004669, 0.038463, -0.292459, 0.777682, 0.565788, -0.432472, -0.060568, -0.082048, -0.009439, 0.041158, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.710000, -0.923935, 0.447832, 0.627381, -0.259808, -0.042325, -0.032258, 0.001420, 0.005294, 0.288570, 0.873350, -0.515586, -0.730207, -0.026023, 0.288755, 0.215678, -0.148061, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [1.053185, -0.398611, 0.850510, -0.144007, -0.485368, -0.079781, 0.176330, 0.234482, -0.153567, 0.447039, -0.532729, -0.855023, 0.878509, 0.775168, -0.391051, -0.713519, 0.391628, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    [0.700000, -0.402804, -0.820508, -0.132914, 0.236278, 0.235164, -0.053551, -0.088687, 0.031253, -0.449354, -0.411507, 0.902946, 0.185335, -0.239125, -0.041696, 0.016857, 0.016709, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000],  # noqa
    
]

spiral = [
    [3.22629, 0.0, 0.0, 0.0, 0.0, -0.0337433, 0.0250155, -0.00622794, 0.000531895, 0.0, 0.0, 0.0, 0.0, 0.176541, -0.120595, 0.0293578, -0.00249592, 0.3, 0.0, 0.0, 0.0, 2.7103e-05, -5.71546e-05, 2.40496e-05, -2.77041e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.83539, 0.0, 0.155871, 0.0762588, 0.00242805, 0.0152569, -0.0244303, 0.00864602, -0.000953554, 1.0, 0.253677, -0.08279, -0.0212254, -0.0874014, 0.0749023, -0.0210301, 0.00202754, 0.3, 0.00124774, 0.0012474, 4.76677e-05, 0.00147598, -0.00136017, 0.000410648, -4.18537e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25871, 0.707107, 0.18146, -0.0234806, -0.00395272, 0.139404, -0.157304, 0.0604196, -0.00785262, 0.707107, -0.240268, 0.00908731, 0.00822476, -0.374609, 0.400438, -0.149035, 0.0189822, 0.3125, 0.00378963, -0.000153355, -2.73386e-05, 0.00691611, -0.007392, 0.00274104, -0.000348015, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.37726, 1.0, -0.0178776, -0.0154641, 0.00146905, -0.13647, 0.133095, -0.0457614, 0.00543079, 0.0, -0.153439, -0.00934652, -0.00234932, -0.335299, 0.340009, -0.119117, 0.0142994, 0.325, 0.00285285, 6.03855e-05, 2.27712e-05, 0.00414181, -0.00404617, 0.0013878, -0.000164291, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, 0.707107, -0.131384, -0.0153493, 0.000265031, -0.439218, 0.465233, -0.171346, 0.0216635, -0.707107, -0.157664, 0.0177158, 0.00241726, -0.154379, 0.172721, -0.0658865, 0.00852862, 0.3375, 0.00460883, -2.5826e-05, -9.77328e-06, 0.00497025, -0.00546028, 0.00205776, -0.000264234, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.29614, 0.0, -0.199975, 0.00071591, 0.001538, -0.381107, 0.401664, -0.14646, 0.0182789, -1.0, 0.00800744, 0.0176196, -0.000659392, 0.169204, -0.17091, 0.0607485, -0.00745351, 0.35, 0.00307895, 1.52273e-05, 4.22099e-06, 0.00670621, -0.00700885, 0.00254305, -0.000316369, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.25247, -0.707107, -0.137642, 0.0133764, 0.000778014, -0.165117, 0.183263, -0.0694046, 0.00893743, -0.707107, 0.135618, 0.0144311, -0.000611582, 0.436948, -0.463004, 0.170602, -0.0215771, 0.3625, 0.00315233, -4.78186e-06, -1.05659e-06, 0.00739595, -0.0078819, 0.00291651, -0.00036999, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, -1.0, -0.000613039, 0.0194857, 5.04293e-05, 0.191775, -0.197376, 0.0714139, -0.00892088, 0.0, 0.198153, -0.000321403, -0.00138801, 0.423082, -0.454386, 0.168845, -0.0214764, 0.375, 0.00312074, 2.05888e-06, 7.82278e-07, 0.00572285, -0.00594708, 0.00216669, -0.000271997, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, -0.707107, 0.13933, 0.0136275, -0.000916832, 0.434959, -0.461051, 0.16995, -0.0215013, 0.707107, 0.138427, -0.0135462, -0.000842539, 0.164696, -0.18285, 0.0692668, -0.00892142, 0.3875, 0.00442297, -8.86509e-07, -3.36819e-07, 0.00515182, -0.00563963, 0.00211988, -0.000271723, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.25247, 0.0, 0.196555, 2.46067e-05, -0.00125654, 0.423939, -0.455227, 0.169125, -0.021509, 1.0, 0.000275224, -0.0194125, -2.26398e-05, -0.191594, 0.197198, -0.0713545, 0.00891399, 0.4, 0.00312848, 4.43736e-07, 1.45027e-07, 0.00740995, -0.00789523, 0.00292092, -0.000370502, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.29614, 0.707107, 0.139115, -0.0136952, -0.000899144, 0.14818, -0.161563, 0.0600819, -0.00759483, 0.707107, -0.139184, -0.013659, 0.000904867, -0.393004, 0.408622, -0.147747, 0.0183355, 0.4125, 0.00313101, -1.64354e-07, -3.98087e-08, 0.00668872, -0.0069913, 0.00253735, -0.000315729, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, 1.0, -2.1071e-05, -0.0193484, 1.73328e-06, -0.191435, 0.197042, -0.0713025, 0.00890794, 0.0, -0.196618, -1.10472e-05, 0.00126169, -0.423905, 0.455194, -0.169114, 0.0215077, 0.425, 0.00312992, 7.07669e-08, 2.68873e-08, 0.00740932, -0.0078946, 0.00292071, -0.000370477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.25247, 0.707107, -0.139057, -0.0136866, 0.000894373, -0.435105, 0.461194, -0.169998, 0.0215069, -0.707107, -0.139088, 0.0136894, 0.000896926, -0.164342, 0.182502, -0.0691507, 0.00890792, 0.4375, 0.00313039, -3.04705e-08, -1.1577e-08, 0.00740907, -0.00789435, 0.00292063, -0.000370468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, 0.0, -0.196673, 8.45765e-07, 0.00126621, -0.423876, 0.455165, -0.169105, 0.0215066, -1.0, 9.45981e-06, 0.0193509, -7.78156e-07, 0.191442, -0.197049, 0.0713045, -0.00890818, 0.45, 0.00313019, 1.45958e-08, 4.98478e-09, 0.00740917, -0.00789445, 0.00292067, -0.000370472, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, -0.707107, -0.139064, 0.0136842, 0.00089498, -0.164355, 0.182515, -0.0691548, 0.0089084, -0.707107, 0.139062, 0.0136855, -0.000894784, 0.435036, -0.461104, 0.169958, -0.021501, 0.4625, 0.00313027, -5.64903e-09, -1.79756e-09, 0.00740913, -0.00789441, 0.00292065, -0.00037047, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.29614, -1.0, -7.24267e-07, 0.0193531, 5.95776e-08, 0.173141, -0.174721, 0.0619963, -0.00759571, 0.0, 0.19667, -3.79722e-07, -0.00111718, 0.382473, -0.403068, 0.146926, -0.0183323, 0.475, 0.00313024, 2.43225e-09, 9.2419e-10, 0.00508923, -0.00518006, 0.00184964, -0.000227637, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, -0.707107, 0.139066, 0.0136845, -0.000895144, 0.4351, -0.461189, 0.169997, -0.0215067, 0.707107, 0.139065, -0.0136844, -0.000895057, 0.164354, -0.182514, 0.0691546, -0.00890837, 0.4875, 0.00442148, -1.04708e-09, -3.98005e-10, 0.0051494, -0.00563716, 0.00211895, -0.000271604, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, 0.0, 0.196669, 2.90358e-08, -0.00126588, 0.423878, -0.455167, 0.169105, -0.0215067, 1.0, 4.6063e-07, -0.019353, -2.67147e-08, -0.189861, 0.195083, -0.0704937, 0.00879739, 0.5, 0.00313025, 5.23606e-10, 1.71536e-10, 0.00740914, -0.00789443, 0.00292066, -0.000370471, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.25247, 0.707107, 0.139066, -0.0136846, -0.000895124, 0.164354, -0.182514, 0.0691545, -0.00890837, 0.707107, -0.139066, -0.0120756, 0.00089513, -0.438338, 0.464093, -0.170973, 0.0216235, 0.5125, 0.00313025, -1.92929e-10, -3.38729e-11, 0.00740914, -0.00789442, 0.00292066, -0.000370471, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.29614, 1.0, -2.57486e-08, -0.019353, 2.11806e-09, -0.173141, 0.17472, -0.0619962, 0.0075957, 0.0, -0.196669, -1.34996e-08, 0.00141472, -0.382992, 0.403407, -0.147025, 0.018343, 0.525, 0.00313025, 8.07297e-11, 3.28562e-11, 0.0050665, -0.00515432, 0.00183987, -0.000226386, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.29614, 0.707107, -0.139066, -0.0136846, 0.000895118, -0.393062, 0.408678, -0.147765, 0.0183376, -0.707107, -0.139066, 0.0136846, 0.000895121, -0.148204, 0.161586, -0.0600896, 0.0075957, 0.5375, 0.00443982, -2.93237e-11, -1.62126e-11, 0.00452562, -0.00487165, 0.00179883, -0.000226386, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.25247, 0.0, -0.196669, -1.40222e-15, 0.00126589, -0.423878, 0.455167, -0.169105, 0.0215067, -1.0, -3.61393e-16, 0.019353, 2.94876e-15, 0.197089, -0.204067, 0.0741975, -0.00930332, 0.55, 0.00313025, 1.87596e-17, 1.17779e-11, 0.00740914, -0.00789442, 0.00292066, -0.000370471, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.29614, -0.707107, -0.139066, 0.0136846, 0.000895118, -0.148204, 0.161586, -0.0600896, 0.0075957, -0.707107, 0.139066, 0.0194097, -0.000895121, 0.382138, -0.399135, 0.144639, -0.0179735, 0.5625, 0.00313025, 2.93238e-11, -1.19568e-11, 0.00668914, -0.00699169, 0.00253747, -0.000315743, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.29614, -1.0, -2.57486e-08, 0.019353, 2.11807e-09, 0.173141, -0.17472, 0.0619962, -0.0075957, 0.0, 0.196669, -1.34996e-08, -0.00111704, 0.382474, -0.403068, 0.146927, -0.0183323, 0.575, 0.00313025, -8.07297e-11, 3.28562e-11, 0.00668914, -0.00699169, 0.00253747, -0.000315743, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.25247, -0.707107, 0.139066, 0.0136846, -0.000895124, 0.4351, -0.46119, 0.169997, -0.0215067, 0.707107, 0.139066, -0.0136846, -0.00089513, 0.164354, -0.182514, 0.0691545, -0.00890836, 0.5875, 0.00313025, 1.92929e-10, -7.4242e-11, 0.00740914, -0.00789442, 0.00292066, -0.000370471, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, 0.0, 0.196669, -2.90358e-08, -0.00126588, 0.423878, -0.455167, 0.169105, -0.0215067, 1.0, -1.88895e-07, -0.019353, 2.67147e-08, -0.189861, 0.195083, -0.0704938, 0.0087974, 0.6, 0.00313025, -3.77221e-10, 1.71536e-10, 0.00740914, -0.00789442, 0.00292066, -0.000370471, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, 0.707107, 0.139066, -0.0136845, -0.000895144, 0.164354, -0.182514, 0.0691546, -0.00890838, 0.707107, -0.139065, -0.0120755, 0.000895057, -0.438337, 0.464093, -0.170973, 0.0216235, 0.6125, 0.00313025, 1.04708e-09, -3.98005e-10, 0.00740914, -0.00789443, 0.00292066, -0.000370471, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.25247, 1.0, -7.24267e-07, -0.0193531, 5.95776e-08, -0.191447, 0.197054, -0.0713064, 0.0089084, 0.0, -0.19667, -3.79722e-07, 0.00141489, -0.424143, 0.455344, -0.169158, 0.0215126, 0.625, 0.00313024, -2.43225e-09, 9.2419e-10, 0.00692605, -0.00733679, 0.00270483, -0.000342289, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, 0.707107, -0.139064, -0.0136842, 0.00089498, -0.4351, 0.461188, -0.169996, 0.0215066, -0.707107, -0.139062, 0.0136855, 0.000894784, -0.164354, 0.182513, -0.069154, 0.00890829, 0.6375, 0.00349832, 5.64903e-09, -2.14634e-09, 0.00676504, -0.00725104, 0.00269215, -0.000342291, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, 0.0, -0.196673, -8.45765e-07, 0.00126621, -0.42388, 0.45517, -0.169107, 0.0215069, -1.0, -7.92259e-06, 0.0193509, 7.78156e-07, 0.197084, -0.20406, 0.0741943, -0.0093029, 0.65, 0.00313019, -1.31198e-08, 4.98478e-09, 0.00740911, -0.00789438, 0.00292064, -0.000370468, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.25247, -0.707107, -0.139057, 0.0136866, 0.000894373, -0.16435, 0.182507, -0.0691514, 0.00890794, -0.707107, 0.139088, 0.0194164, -0.000896926, 0.423756, -0.451096, 0.166628, -0.0211069, 0.6625, 0.00313039, 3.04705e-08, -9.69575e-09, 0.0074092, -0.00789453, 0.0029207, -0.000370477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, -1.0, -2.1071e-05, 0.0193484, 1.73328e-06, 0.191438, -0.197037, 0.071299, -0.00890737, 0.0, 0.196618, -1.10472e-05, -0.00111334, 0.423592, -0.454953, 0.169036, -0.0214985, 0.675, 0.00312992, -7.07669e-08, 2.68873e-08, 0.007409, -0.00789418, 0.00292055, -0.000370455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, -0.707107, 0.139115, 0.0136952, -0.000899144, 0.435122, -0.461227, 0.170013, -0.021509, 0.707107, 0.139184, -0.013659, -0.000904867, 0.164254, -0.182429, 0.0691272, -0.00890517, 0.6875, 0.00313101, 1.64354e-07, -6.2445e-08, 0.00740951, -0.00789505, 0.00292093, -0.000370509, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.25247, 0.0, 0.196555, -2.46067e-05, -0.00125654, 0.423828, -0.455081, 0.169067, -0.0215013, 1.0, -0.000160081, -0.0194125, 2.26398e-05, -0.190199, 0.195513, -0.0706668, 0.00882035, 0.7, 0.00312848, -3.43537e-07, 1.45027e-07, 0.00740829, -0.00789302, 0.00292004, -0.000370385, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.25247, 0.707107, 0.13933, -0.0136275, -0.000916832, 0.164469, -0.182714, 0.0692441, -0.00892088, 0.707107, -0.138427, -0.0119535, 0.000842539, -0.438032, 0.463588, -0.170751, 0.0215926, 0.7125, 0.00313434, 8.86509e-07, -3.36819e-07, 0.00741093, -0.00789754, 0.00292205, -0.000370665, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.23921, 1.0, -0.000613039, -0.0194857, 5.04293e-05, -0.197687, 0.204912, -0.0746394, 0.00938404, 0.0, -0.198153, -0.000321403, 0.00155121, -0.438256, 0.473691, -0.177098, 0.0226618, 0.725, 0.00312074, -2.05888e-06, 7.82278e-07, 0.00714451, -0.00761044, 0.00282181, -0.000359169, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.25247, 0.707107, -0.137642, -0.0133764, 0.000778014, -0.434478, 0.460108, -0.169513, 0.0214392, -0.707107, -0.135618, 0.0144311, 0.000611582, -0.164082, 0.18132, -0.068536, 0.00881701, 0.7375, 0.00352298, 4.78186e-06, -1.81657e-06, 0.00677015, -0.00726327, 0.00269803, -0.000343138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.23921, 0.0, -0.199975, -0.00071591, 0.001538, -0.438785, 0.474926, -0.177682, 0.0227455, -1.0, -0.00706594, 0.0176196, 0.000659392, 0.194206, -0.199061, 0.0720768, -0.00903074, 0.75, 0.00307895, -1.11056e-05, 4.22099e-06, 0.00762036, -0.00815192, 0.00303063, -0.000386458, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.34294, -0.707107, -0.131384, 0.0153493, 0.000265031, -0.129994, 0.137268, -0.0497382, 0.00614248, -0.707107, 0.157664, 0.0197988, -0.00241726, 0.355605, -0.367518, 0.131199, -0.016025, 0.7625, 0.00324941, 2.5826e-05, -8.62416e-06, 0.00604156, -0.00621867, 0.00221747, -0.00027081, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    [2.29614, -1.0, -0.0178776, 0.0154641, 0.00146905, 0.165586, -0.162003, 0.0564488, -0.00683763, 0.0, 0.153439, -0.00934652, 0.00262554, 0.364492, -0.372749, 0.133672, -0.0165185, 0.775, 0.00285285, -6.03855e-05, 2.27712e-05, 0.00657118, -0.00679357, 0.00245111, -0.000303946, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [2.69547, -0.707107, 0.18146, 0.0234806, -0.00395272, 0.170229, -0.156195, 0.0488951, -0.00521321, 0.707107, 0.240268, 0.00908731, -0.00822476, 0.0453075, -0.0535615, 0.0185505, -0.00207481, 0.7875, 0.00378963, 0.000153355, -4.70026e-05, 0.00292425, -0.00269604, 0.000847629, -9.06869e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 
    [3.24525, 0.0, 0.0779356, -0.0381294, 0.00242805, -0.0123941, 0.0106905, -0.00292229, 0.000265357, 1.0, -0.21103, -0.08279, 0.0212254, -0.139617, 0.111394, -0.0301069, 0.00274063, 0.8, 0.00124774, -0.000550368, 4.76677e-05, -0.000266313, 0.00021132, -5.59396e-05, 4.99525e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
]

class Uploader:
    def __init__(self):
        self._is_done = False
        self._sucess = True

    def upload(self, trajectory_mem):
        print('Uploading data')
        try:
            trajectory_mem.write_data(self._upload_done, write_failed_cb=self._upload_failed)
        except Exception as e:
            print(e)
        while not self._is_done:
            time.sleep(0.2)

        return self._sucess

    def _upload_done(self, mem, addr):
        print('Data uploaded')
        self._is_done = True
        self._sucess = True

    def _upload_failed(self, mem, addr):
        print('Data upload failed')
        self._is_done = True
        self._sucess = False


def wait_for_position_estimator(scf):
    print('Waiting for estimator to find position...')

    log_config = LogConfig(name='Kalman Variance', period_in_ms=500)
    log_config.add_variable('kalman.varPX', 'float')
    log_config.add_variable('kalman.varPY', 'float')
    log_config.add_variable('kalman.varPZ', 'float')

    var_y_history = [1000] * 10
    var_x_history = [1000] * 10
    var_z_history = [1000] * 10

    threshold = 0.001

    with SyncLogger(scf, log_config) as logger:
        for log_entry in logger:
            data = log_entry[1]

            var_x_history.append(data['kalman.varPX'])
            var_x_history.pop(0)
            var_y_history.append(data['kalman.varPY'])
            var_y_history.pop(0)
            var_z_history.append(data['kalman.varPZ'])
            var_z_history.pop(0)

            min_x = min(var_x_history)
            max_x = max(var_x_history)
            min_y = min(var_y_history)
            max_y = max(var_y_history)
            min_z = min(var_z_history)
            max_z = max(var_z_history)

            print("{} {} {}".format(max_x - min_x, max_y - min_y, max_z - min_z))

            if (max_x - min_x) < threshold and (
                    max_y - min_y) < threshold and (
                    max_z - min_z) < threshold:
                break


def reset_estimator(cf):
    cf.param.set_value('kalman.resetEstimation', '1')
    time.sleep(0.1)
    cf.param.set_value('kalman.resetEstimation', '0')

    wait_for_position_estimator(cf)


def activate_high_level_commander(cf):
    cf.param.set_value('commander.enHighLevel', '1')


def activate_mellinger_controller(cf):
    cf.param.set_value('stabilizer.controller', '2')


def upload_trajectory(cf, trajectory_id, trajectory):
    trajectory_mem = cf.mem.get_mems(MemoryElement.TYPE_TRAJ)[0]
    print("trajectory mem : {}".format(sys.getsizeof(trajectory_mem.trajectory)))
    total_duration = 0
    for row in trajectory:
        duration = row[0]
        x = Poly4D.Poly(row[1:9])
        y = Poly4D.Poly(row[9:17])
        z = Poly4D.Poly(row[17:25])
        yaw = Poly4D.Poly(row[25:33])
        trajectory_mem.trajectory.append(Poly4D(duration, x, y, z, yaw))
        total_duration += duration
    print("trajectory mem : {}".format(sys.getsizeof(trajectory_mem.trajectory)))
    upload_result = Uploader().upload(trajectory_mem)
    if not upload_result:
        print('Upload failed, aborting!')
        sys.exit(1)
    cf.high_level_commander.define_trajectory(trajectory_id, 0, len(trajectory_mem.trajectory))
    return total_duration


def run_sequence(cf, trajectory_id, duration):
    commander = cf.high_level_commander

    commander.takeoff(1.0, 2.0)
    time.sleep(3.0)
    relative = True
    commander.start_trajectory(trajectory_id, 1.0, relative)
    time.sleep(duration)
    commander.land(0.0, 2.0)
    time.sleep(2)
    commander.stop()


if __name__ == '__main__':
    cflib.crtp.init_drivers()

    with SyncCrazyflie(uri, cf=Crazyflie(rw_cache='./cache')) as scf:
        cf = scf.cf
        trajectory_id = 1
        print("Trajectory figure8: \tlen-{}\tsize-{}".format(len(figure8), sys.getsizeof(figure8)))
        print("Trajectory spiral : \tlen-{}\tsize-{}".format(len(spiral), sys.getsizeof(spiral)))
        activate_high_level_commander(cf)
        # activate_mellinger_controller(cf)
        duration = upload_trajectory(cf, trajectory_id, spiral)
        print('The sequence is {:.1f} seconds long'.format(duration))
        # reset_estimator(cf)
        input("fly..")
        run_sequence(cf, trajectory_id, duration)
